# name: android e2e emulator test

# on: push

# jobs:
#   run-mobile-tests:
#     runs-on: macos-latest

#     steps:
#       - name: Set up JDK 11
#         uses: actions/setup-java@v3
#         with:
#           java-version: 11
#           distribution: 'temurin'

#       - name: pull the project in runner
#         uses: actions/checkout@v3

#       - name: setup appium
#         run: |
#           npm install -g appium@1.22
#           appium -v
#           appium &>/dev/null &
#       - name: run tests
#         uses: reactivecircus/android-emulator-runner@v2
#         with:
#           api-level: 29
#           script: mvn clean test -Dsurefire.suiteXmlFiles=androidSmoketestng.xml -Dplatform=android || true

#       - name: Upload Appium logs
#         uses: actions/upload-artifact@v2
#         with:
#           name: appium-logs
#           path: appium.log



# name: Android emulator
# on:
#   push:

# env:
#   ANDROID_ARCH: x86_64
#   ANDROID_TARGET: google_apis_playstore
#   API_LEVEL: 33
#   ANDROID_BUILD_TOOLS_VERSION: 33.0.2
#   ANDROID_SDK_PACKAGES: system-images;android-33;google_apis_playstore;x86_64 platforms;android-33 build-tools;33.0.2 platform-tools emulator
#   EMULATOR_TIMEOUT: 350
#   EMULATOR_NAME: nexus

# jobs:
#   playwright-emulator:
# #    timeout-minutes: 20
#     runs-on: macos-latest

#     steps:
#       - uses: actions/checkout@v3

#       - name: Add avdmanager and sdkmanager to system PATH
#         run: |
#           echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH

#       - name: Install SDK
#         run: |
#           yes Y | sdkmanager --licenses
#           sdkmanager --install ${ANDROID_SDK_PACKAGES}

# #      - name: Build emulator
# #        run: |
# #          echo "no" | avdmanager --verbose create avd --force -n $EMULATOR_NAME --abi "${ANDROID_TARGET}/${ANDROID_ARCH}" -k "system-images;android-${API_LEVEL};${ANDROID_TARGET};${ANDROID_ARCH}"
# #
# #      - name: Launch emulator
# #        run: |
# #          chmod +x ./start_emu_headless.sh
# #          EMULATOR_TIMEOUT=$EMULATOR_TIMEOUT EMULATOR_NAME=$EMULATOR_NAME ./start_emu_headless.sh

# #      - name: Install and Run Appium Server
# #        run: |
# #          chmod +x ./scripts/run_appium_server.sh # install and run appium server in the background
# #          ./scripts/run_appium_server.sh
#       - name: Set up JDK 11
#         uses: actions/setup-java@v3
#         with:
#             java-version: 11
#             distribution: 'adopt'

#       - name: Install scrcpy on macOS
#         run: |
#           brew install scrcpy

#       - name: Install Appium driver
#         run: |
#             npm install -g appium@v2.0.0
#             appium driver install uiautomator2
#             appium -v
# #            appium
#       - name: Launch appium
#         run: |
#           appium &> appium.log &

# #      - name: Appium driver list
# #        run: |
# #          appium driver list --installed

# #      - name: Run e2e Tests
# #        run: |
# #          mvn clean test -Dsurefire.suiteXmlFiles=androidSmoketestng.xml -Dplatform=android
# #      - name: run tests
# #        uses: reactivecircus/android-emulator-runner@v2
# #        with:
# #            api-level: 31
# #            target: google_apis
# #            arch: x86_64
# #            profile: Nexus 6
# #            script: mvn clean test -Dsurefire.suiteXmlFiles=androidSmoketestng.xml -Dplatform=android || true
# #      - name: run tests
# #        run: mvn clean test -Dsurefire.suiteXmlFiles=androidSmoketestng.xml -Dplatform=android || true

#       - name: Record Video with scrcpy
#         uses: reactivecircus/android-emulator-runner@v2
#         with:
#            api-level: 33
#            target: google_apis
#            arch: x86_64
#            profile: Nexus 6
#            script:
#                 scrcpy --record output.mp4 &
#                 RECORDING_PID=$!
#                 mvn clean test -Dsurefire.suiteXmlFiles=androidSmoketestng.xml -Dplatform=android || true
#                 kill $RECORDING_PID

# #        run: |
# #          # Start recording the screen using scrcpy
# #          scrcpy --record output.mp4 &
# #          # Capture the process ID of scrcpy for later termination
# #          RECORDING_PID=$!
# #
# #          # Run your Appium tests here
# #          # For example:
# #          mvn clean test -Dsurefire.suiteXmlFiles=androidSmoketestng.xml -Dplatform=android || true
# #
# #          # Stop the video recording
# #          kill $RECORDING_PID
# #        env:
# #          DISPLAY: ":0"

#       - name: Publish Video
#         uses: actions/upload-artifact@v2
#         with:
#           name: output.mp4
#           path: output.mp4

#       - name: Upload Appium logs
#         uses: actions/upload-artifact@v2
#         with:
#           name: appium-logs
#           path: appium.log

name: Run android tests in github runner

on: push
  
jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [25]
    steps:
      - name: checkout
        uses: actions/checkout@v2
        
      - name: Set up JDK 1.11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
          
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - run: |
            npm install -g appium@v1.22
            appium -v
            appium &>/dev/null &
       
      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: run android tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          profile: Nexus 6
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: mvn clean test -Dsurefire.suiteXmlFiles=androidSmoketestng.xml -Dplatform=android || true


      - name: Upload Appium logs
        uses: actions/upload-artifact@v2
        with:
          name: appium-logs
          path: appium.log
